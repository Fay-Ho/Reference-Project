plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Java 工具包，只用作编译，否则会报 Java 模块重复的错误
    compileOnly files('/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/lib/tools.jar')
    compileOnly files('/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/jre/lib/rt.jar')

    // 自动生成注解处理器的注解工具
    implementation 'com.google.auto.service:auto-service-annotations:1.0'
    annotationProcessor 'com.google.auto.service:auto-service:1.0'

    // 将编译好的 Jar 包放到引用该包的工程的 src/libs 目录下
    // 在使用的工程的 app/build.gradle 文件引入
    // implementation fileTree(dir: 'libs', includes: ['*.jar'])
    // annotationProcessor fileTree(dir: 'libs', includes: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

task makeJar(type: Copy) {
    // 删除已存在的 Jar 包
    delete 'build/libs/annotation.jar'

    // 设置拷贝的文件
    from('build/intermediates/aar_main_jar/release/')

    // 将打包好的 Jar 包放到以下目录, Parcel 模块下的 build/libs/
    into('build/libs/')

    // 将 classes.jar 放入 build/libs/ 目录下
    // include, exclude参数来设置过滤
    include('classes.jar')

    // 重命名为 annotation.jar
    rename ('classes.jar', 'annotation.jar')

    // 在当前目录的命令行输入 ./gradlew makeJar 编译 Jar 包
}

makeJar.dependsOn(build)
